package pac1;

import java.util.*;
import java.util.concurrent.*;

public class Fibonacci {

	public Future<Long> runTask(int n) {
		Callable<Long> t = new Callable<Long>() {
			long before = 0;
			long current = 1;
			long next = 1;
			long result = 0;

			@Override
			public Long call() throws Exception {
				for (int i = 0; i < n; i++) {
					result += current;
					before = current;
					current = next;
					next = before + current;
				}
				// TODO Auto-generated method stub
				return result;
			}
		};
		ExecutorService exec = Executors.newCachedThreadPool();
		Future<Long> f = exec.submit(t);
		return f;

	}

	public static void main(String[] args) throws InterruptedException, ExecutionException {
		Fibonacci f = new Fibonacci();
		Future<Long> fu = f.runTask(5);
		System.out.println(fu.get());

	}
}
